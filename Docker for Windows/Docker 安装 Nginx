docker search nginx
docker pull nginx 
docker images
docker run --name mynginx -p 8082:8001 -d nginx
docker ps  -- 查看正在运行
docker ps -a  -- 查看all
docker cp mynginx:/etc/nginx/nginx.conf D:\Linux\root\nginx\conf
docker cp mynginx:/etc/nginx/conf.d D:\Linux\root\nginx\conf
docker cp mynginx:/usr/share/nginx/html/ D:\Linux\root\nginx
docker stop mynginx
docker rm mynginx
docker rm mytomcat
docker rm tomca-test

docker run -d -p 8081:7081 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
-m 200m：设置容器使用内存最大值
-v : 挂载目录到容器中
-d : 以守护进程的方式运行一个容器
-p 8081:7081：将容器的7081端口映射到主机的8081端口，需要访问8081

docker run --name nginx -p 8081:7081 -d nginx 不挂载
docker stop nginx
docker start nginx 
进入容器bash
docker exec -it 3c091461c67d328fee5948223f23939a392902f90c49b6462c7d45542d001078 /bin/bash
docker exec -it nginx /bin/bash

启动nginx成功，但是http://localhost:8081/无法访问
查看ip docker inspect
连接 curl 172.17.0.2 -- 无法连接到远程服务器
进入容器，可以连接
PS C:\Users\Administrator> docker exec -it nginx /bin/bash
root@3c091461c67d:/# curl 172.17.0.2
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
root@3c091461c67d:/#

容器内能访问，外部无法访问...
最后修改如下命令可以访问：（改为80:80）
docker run -d -p 80:80 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
8088:80 也可以访问
docker run -d -p 8088:80 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
8088:8081 不可以访问
docker run -d -p 8088:8081 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
8088:8080 也可以访问
docker run -d -p 8088:8080 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
经测试, 80和8080端口可用
同时启动tomcat和nginx,同时映射8080端口（8080:8080,8088:8080）都可以正常访问，说明端口可共用。因为每个docker都有1个80端口


docker run -p 6379:6379 --name redis -v D:\Linux\root\redis\redis.conf:/etc/redis/redis.conf -v D:\Linux\root\redis\data:/data -d redis redis-server /etc/redis/redis.conf 
docker exec -it redis redis-cli  -- 连接redis
set 命令提示：(error) NOAUTH Authentication required.
需要密码
auth "123456" or auth 123456
或者直接 docker exec -it redis redis-cli -a 123456

进入容器内部，通用命令
docker exec -it redis bash  /  docker exec -it redis /bin/bash
# 或直接使用redis-cli访问容器内redis


PS C:\Users\Administrator> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS             PORTS                            NAMES
f545e7016944   nginx     "/docker-entrypoint.…"   37 minutes ago      Up 37 minutes      80/tcp, 0.0.0.0:8088->8080/tcp   nginx
337fd66a7da8   tomcat    "catalina.sh run"        About an hour ago   Up About an hour   0.0.0.0:8081->8080/tcp           tomcat
访问http://localhost/ 和 http://localhost:8088/ 都是nginx. 即80/tcp, 0.0.0.0:8088->8080/tcp

为什么只能映射80和8080？
docker run -d -p 8088:8087 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
现在可以访问了，为什么？  65行命令也可以访问了：8088:8081

docker inspect tomcat 查看容器ip : 172.17.0.3
docker run -d -p 8082:8080 --name tomcat -v D:/linux//root/tomcat/webapps:/usr/local/tomcat/webapps -v D:/linux/root/tomcat/conf:/usr/local/tomcat/conf -v D:/linux//root/tomcat/logs:/usr/local/tomcat/logs tomcat
可以访问
进入容器 curl 172.17.0.2:8080 可以访问
docker run -d -p 8082:8081 --name tomcat -v D:/linux//root/tomcat/webapps:/usr/local/tomcat/webapps -v D:/linux/root/tomcat/conf:/usr/local/tomcat/conf -v D:/linux//root/tomcat/logs:/usr/local/tomcat/logs tomcat
不可访问
进入容器 curl 172.17.0.2:8081 不可访问
docker run -d -p 8082:80 --name tomcat -v D:/linux//root/tomcat/webapps:/usr/local/tomcat/webapps -v D:/linux/root/tomcat/conf:/usr/local/tomcat/conf -v D:/linux//root/tomcat/logs:/usr/local/tomcat/logs tomcat
不可访问
进入容器 curl 172.17.0.2:80 不可访问

docker inspect nginx 查看容器ip : 172.17.0.3
docker run -d -p 8088:8087 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
可以访问，但是刷新就不可访问
进入容器 curl 172.17.0.2:8087 不可访问
进入容器 curl 172.17.0.2:80 可以访问
docker run -d -p 8087:80 -m 200m --name nginx -v D:\Linux\root\nginx\conf\nginx.conf:/etc/nginx/nginx.conf -v D:\Linux\root\nginx\logs:/var/log/nginx -v D:\Linux\root\nginx\html:/usr/share/nginx/html -v D:\Linux\root\nginx\conf\conf.d:/etc/nginx/conf.d nginx
可以访问，刷新之后也可以
进入容器 curl 172.17.0.3 可以访问

经测试 nginx需要映射容器端口80，tomcat需要映射容器端口8080
但是为什么呢




